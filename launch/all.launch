<?xml version="1.0"?>
<launch>
    <arg name="rgb_point_cloud" default="true"/>
    <arg name="with_utils" default="true"/>
    <arg name="use_static_cloud" default="false"/>
    <arg name="local_kinect" default="false"/>
    <arg name="only_virtual" default="false"/>
    <arg name="use_fake_kinect" default="$(arg only_virtual)"/>

    <group if="$(arg use_static_cloud)">
        <node pkg="authoring" type="static_publisher" name="camera_static_publisher">
            <param name="file_name" type="string" value="transforms.yaml" />
            <param name="transform" type="string" value="static_cloud_transform" />
        </node>

        <node pkg="authoring" type="pc_publish" name="pc_publish"/>
    </group>

    <node pkg="authoring" type="simulator" name="simulator" output="screen">
        <param name="use_relaxed_ik" type="bool" value="false" />
        <param name="only_virtual" value="$(arg only_virtual)" />
    </node>
    
    <node pkg="authoring" type="static_publisher" name="go_camera_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="go_camera_transform" />
    </node>

    <node pkg="authoring" type="static_publisher" name="external_view_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="external_view_transform" />
    </node>

    <group if="$(arg only_virtual)">
        <node pkg="authoring" type="static_publisher" name="panda_gripper_static_publisher">
            <param name="file_name" type="string" value="transforms.yaml" />
            <param name="transform" type="string" value="sim_robot_transform" />
        </node>
    </group>

    
    <group if="$(arg local_kinect)">
        <include file="$(find authoring)/launch/kinect.launch">
            <arg name="rgb_point_cloud" default="$(arg rgb_point_cloud)"/>
            <arg name="tf_prefix" default="internal_"/>
        </include>
    </group>

    <group unless="$(arg use_fake_kinect)">
        <node pkg="authoring" type="static_publisher" name="rgb_camera_static_publisher">
            <param name="file_name" type="string" value="transforms.yaml" />
            <param name="transform" type="string" value="rgb_camera_transform" />
        </node>
        <node pkg="authoring" type="cloud_filter" name="cloud_filter"/>

    </group>

    <group if="$(arg use_fake_kinect)">
        <node pkg="authoring" type="static_publisher" name="rgb_camera_static_publisher">
            <param name="file_name" type="string" value="transforms.yaml" />
            <param name="transform" type="string" value="fake_camera_transform" />
        </node>

        <node pkg="authoring" type="static_publisher" name="camera_static_publisher">
            <param name="file_name" type="string" value="transforms.yaml" />
            <param name="transform" type="string" value="static_cloud_transform" />
        </node>

        <node pkg="authoring" type="pc_publish" name="pc_publish"/>
    </group>

    <include file="$(find authoring)/launch/joint_state_pub.launch"/>  

    <group if="$(arg with_utils)">
        <include file="$(find authoring)/launch/utils.launch">  
            <arg name="use_relaxed_ik" default="false"/>
            <arg name="only_virtual" default="$(arg only_virtual)"/>
        </include>
    </group>

    <include file="$(find authoring)/launch/virtual_camera.launch">  
    </include>

    <node pkg="authoring" type="static_publisher" name="sim_ee_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="sim_ee_transform" />
    </node>
</launch>
