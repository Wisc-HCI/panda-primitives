; Auto-generated. Do not edit!


(cl:in-package authoring_msgs-msg)


;//! \htmlinclude AuthoringActionGoal.msg.html

(cl:defclass <AuthoringActionGoal> (roslisp-msg-protocol:ros-message)
  ((header
    :reader header
    :initarg :header
    :type std_msgs-msg:Header
    :initform (cl:make-instance 'std_msgs-msg:Header))
   (goal_id
    :reader goal_id
    :initarg :goal_id
    :type actionlib_msgs-msg:GoalID
    :initform (cl:make-instance 'actionlib_msgs-msg:GoalID))
   (goal
    :reader goal
    :initarg :goal
    :type authoring_msgs-msg:AuthoringGoal
    :initform (cl:make-instance 'authoring_msgs-msg:AuthoringGoal)))
)

(cl:defclass AuthoringActionGoal (<AuthoringActionGoal>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <AuthoringActionGoal>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'AuthoringActionGoal)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name authoring_msgs-msg:<AuthoringActionGoal> is deprecated: use authoring_msgs-msg:AuthoringActionGoal instead.")))

(cl:ensure-generic-function 'header-val :lambda-list '(m))
(cl:defmethod header-val ((m <AuthoringActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader authoring_msgs-msg:header-val is deprecated.  Use authoring_msgs-msg:header instead.")
  (header m))

(cl:ensure-generic-function 'goal_id-val :lambda-list '(m))
(cl:defmethod goal_id-val ((m <AuthoringActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader authoring_msgs-msg:goal_id-val is deprecated.  Use authoring_msgs-msg:goal_id instead.")
  (goal_id m))

(cl:ensure-generic-function 'goal-val :lambda-list '(m))
(cl:defmethod goal-val ((m <AuthoringActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader authoring_msgs-msg:goal-val is deprecated.  Use authoring_msgs-msg:goal instead.")
  (goal m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <AuthoringActionGoal>) ostream)
  "Serializes a message object of type '<AuthoringActionGoal>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'header) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal_id) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <AuthoringActionGoal>) istream)
  "Deserializes a message object of type '<AuthoringActionGoal>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'header) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal_id) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<AuthoringActionGoal>)))
  "Returns string type for a message object of type '<AuthoringActionGoal>"
  "authoring_msgs/AuthoringActionGoal")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'AuthoringActionGoal)))
  "Returns string type for a message object of type 'AuthoringActionGoal"
  "authoring_msgs/AuthoringActionGoal")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<AuthoringActionGoal>)))
  "Returns md5sum for a message object of type '<AuthoringActionGoal>"
  "de05a9fa4de9d6c20e0eb50635b57b52")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'AuthoringActionGoal)))
  "Returns md5sum for a message object of type 'AuthoringActionGoal"
  "de05a9fa4de9d6c20e0eb50635b57b52")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<AuthoringActionGoal>)))
  "Returns full string definition for message of type '<AuthoringActionGoal>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%AuthoringGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: authoring_msgs/AuthoringGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal definition~%authoring_msgs/Action goal~%~%================================================================================~%MSG: authoring_msgs/Action~%#Types~%uint8 PICK=0~%uint8 SCREW=1~%uint8 PLACE=2~%uint8 WIPE=3~%uint8 MOVE_OBJECT=4~%uint8 RESET=5~%uint8 MOVE=6~%uint8 MOVE_TO_CONTACT=7~%uint8 GRASP=8~%uint8 RELEASE=9~%uint8 VIEW=10~%uint8 INSPECT=11~%uint8 WAIT=12~%uint8 PUSH=13~%uint8 STOP=14~%uint8 INSERT=15~%uint8 MOVE_FORCE=16~%uint8 UNSCREW=17~%uint8 MOVE_ANGLE=18~%uint8 PULL=19~%uint8 CAMERA_VELOCITY=20~%uint8 MOVE_UNKNOWN=21~%uint8 PULL_DRAWER=22~%uint8 BIAS_FORCES=23~%uint8 DROP=24~%uint8 RELEASE_FORCE=25~%~%# Type~%uint8 type~%~%std_msgs/Bool sim~%~%std_msgs/Bool finished~%~%# HybridPoseArray (for high level planning)~%panda_ros_msgs/HybridPoseArray poses~%~%# HybridPose (for low level planning)~%panda_ros_msgs/HybridPose pose~%~%# JointState (for going to fixed position, example reset)~%float64[] joint_pose~%~%# Item~%std_msgs/String item~%~%# Velocity~%geometry_msgs/Twist velocity~%~%================================================================================~%MSG: std_msgs/Bool~%bool data~%================================================================================~%MSG: panda_ros_msgs/HybridPoseArray~%Header header~%panda_ros_msgs/HybridPose[] poses~%~%================================================================================~%MSG: panda_ros_msgs/HybridPose~%# Pose~%geometry_msgs/Pose pose~%~%# Selection vector [6 (drop rotation for now)]~%uint8[] sel_vector~%~%# Desired Wrench~%geometry_msgs/Wrench wrench~%~%# Constraint Frame (might drop)~%geometry_msgs/Quaternion constraint_frame~%~%# Header~%Header header~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/Wrench~%# This represents force in free space, separated into~%# its linear and angular parts.~%Vector3  force~%Vector3  torque~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%================================================================================~%MSG: std_msgs/String~%string data~%~%================================================================================~%MSG: geometry_msgs/Twist~%# This expresses velocity in free space broken into its linear and angular parts.~%Vector3  linear~%Vector3  angular~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'AuthoringActionGoal)))
  "Returns full string definition for message of type 'AuthoringActionGoal"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%AuthoringGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: authoring_msgs/AuthoringGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal definition~%authoring_msgs/Action goal~%~%================================================================================~%MSG: authoring_msgs/Action~%#Types~%uint8 PICK=0~%uint8 SCREW=1~%uint8 PLACE=2~%uint8 WIPE=3~%uint8 MOVE_OBJECT=4~%uint8 RESET=5~%uint8 MOVE=6~%uint8 MOVE_TO_CONTACT=7~%uint8 GRASP=8~%uint8 RELEASE=9~%uint8 VIEW=10~%uint8 INSPECT=11~%uint8 WAIT=12~%uint8 PUSH=13~%uint8 STOP=14~%uint8 INSERT=15~%uint8 MOVE_FORCE=16~%uint8 UNSCREW=17~%uint8 MOVE_ANGLE=18~%uint8 PULL=19~%uint8 CAMERA_VELOCITY=20~%uint8 MOVE_UNKNOWN=21~%uint8 PULL_DRAWER=22~%uint8 BIAS_FORCES=23~%uint8 DROP=24~%uint8 RELEASE_FORCE=25~%~%# Type~%uint8 type~%~%std_msgs/Bool sim~%~%std_msgs/Bool finished~%~%# HybridPoseArray (for high level planning)~%panda_ros_msgs/HybridPoseArray poses~%~%# HybridPose (for low level planning)~%panda_ros_msgs/HybridPose pose~%~%# JointState (for going to fixed position, example reset)~%float64[] joint_pose~%~%# Item~%std_msgs/String item~%~%# Velocity~%geometry_msgs/Twist velocity~%~%================================================================================~%MSG: std_msgs/Bool~%bool data~%================================================================================~%MSG: panda_ros_msgs/HybridPoseArray~%Header header~%panda_ros_msgs/HybridPose[] poses~%~%================================================================================~%MSG: panda_ros_msgs/HybridPose~%# Pose~%geometry_msgs/Pose pose~%~%# Selection vector [6 (drop rotation for now)]~%uint8[] sel_vector~%~%# Desired Wrench~%geometry_msgs/Wrench wrench~%~%# Constraint Frame (might drop)~%geometry_msgs/Quaternion constraint_frame~%~%# Header~%Header header~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/Wrench~%# This represents force in free space, separated into~%# its linear and angular parts.~%Vector3  force~%Vector3  torque~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%================================================================================~%MSG: std_msgs/String~%string data~%~%================================================================================~%MSG: geometry_msgs/Twist~%# This expresses velocity in free space broken into its linear and angular parts.~%Vector3  linear~%Vector3  angular~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <AuthoringActionGoal>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'header))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal_id))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <AuthoringActionGoal>))
  "Converts a ROS message object to a list"
  (cl:list 'AuthoringActionGoal
    (cl:cons ':header (header msg))
    (cl:cons ':goal_id (goal_id msg))
    (cl:cons ':goal (goal msg))
))
